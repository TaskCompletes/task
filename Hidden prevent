php
Date	Friday, November 17, 2023 - 09:09
User	narkunan
Location	http://localhost/drupal/demos/web/rsvpforget?_wrapper_format=drupal_ajax&ajax_form=1
Referrer	http://localhost/drupal/demos/web/rsvpforget
Message	Symfony\Component\HttpKernel\Exception\HttpException: The specified #ajax callback is empty or not callable. in Drupal\Core\Form\FormAjaxResponseBuilder->buildResponse() (line 67 of C:\xampp\htdocs\drupal\demos\web\core\lib\Drupal\Core\Form\FormAjaxResponseBuilder.php).
Severity	Error
Hostname	::1
Operations	
above is the error which i am getting for below code
public function buildForm(array $form, FormStateInterface $form_state)
     {
      $form['select_branch_name'] = [
        '#type' => 'select',
        '#title' => $this->t('Select Branch Name'),
        '#options' => [
          '1' => $this->t('CSE'),
          '2' => $this->t('IT'),
          '3' => $this->t('EEE'),
          '4' => $this->t('ECE'),
        ],
        '#ajax' => [
          'callback' => '::myAjaxCallback', // Use :: when calling a class method.
          'disable-refocus' => FALSE, // Or TRUE to prevent re-focusing on the triggering element.
          'event' => 'change',
          'wrapper' => 'edit-output', // wrapper element is updated with this AJAX callback.
          'progress' => [
            'type' => 'throbber',
            'message' => $this->t('Verifying entry...'),
          ],
        ]
      ];
      // Create a textbox that will be updated
      // when the user selects an item from the select box above.
      $form['output'] = [
        '#type' => 'textfield',
        '#size' => '60',
        '#disabled' => TRUE,
        '#value' => 'Branch Names',      
        '#prefix' => '<div id="edit-output">',
        '#suffix' => '</div>',
      ];
  
      // Create the submit button.
      $form['submit'] = [
        '#type' => 'submit',
        '#value' => $this->t('Submit'),
      ];
      return $form; 
    }
    public function myAjaxCallback(array &$form, FormStateInterface $form_state) {
      // Prepare our textfield. check if the select_branch_name has a selected option.
      if ($selectedValue = $form_state->getValue('select_branch_name')) {
          // Get the text of the selected option.
          $selectedText = $form['select_branch_name']['#options'][$selectedValue];
          // Place the text of the selected option in our textfield.
          $form['output']['#value'] = $selectedText;
      }
      // Return the prepared textfield.
      return $form['output']; 
    }
