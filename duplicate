array(16) {
  ["asp"]=>
  array(3) {
    [0]=>
    array(2) {
      [0]=>
      string(3) "doc"
      [1]=>
      string(4) "docx"
    }
    [1]=>
    array(2) {
      [0]=>
      string(3) "doc"
      [1]=>
      string(4) "docx"
    }
    [2]=>
    array(2) {
      [0]=>
      string(3) "doc"
      [1]=>
      string(4) "docx"
    }
  }
  ["asp2"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      string(3) "zip"
    }
  }
  ["asc2"]=>
  array(5) {
    [0]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
    [1]=>
    array(2) {
      [0]=>
      string(3) "xml"
      [1]=>
      string(3) "zip"
    }
    [2]=>
    array(2) {
      [0]=>
      string(3) "xml"
      [1]=>
      string(3) "zip"
    }
    [3]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
    [4]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
  }
  ["anaw"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
  }
  ["asc"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
  }
  ["nia"]=>
  array(2) {
    [0]=>
    array(1) {
      [0]=>
      string(3) "xml"
    }
    [1]=>
    array(1) {
      [0]=>
      string(3) "pdf"
    }
  }
   foreach ($definitions->getBundles() as $bundle) {
      foreach ($bundle->getDocument() as $document) {
        if (!is_null($document->getExtensions())) {
          $extension[$bundle->getType()][] = explode(' ', $document->getExtensions());
        }
      }
    } this is the logic written to get the above array can add a proper logic to remove the duplicate element from array
